Ex 1.1
1. emacs SP exer1.html Enter
2. C-s PUBLIC
3. C-s Laboratory M-b
4. C-s self-referential M-b M-b
5. C-s arrow M-b
6. C-e
7. C-a
8. (used commands)
9. (see commands above)
10. C-x C-c

Ex 1.2
1. emacs SP exer2.html Enter
2. M-g g 18 Enter C-k
3. C-s <!— Enter C-a C-k
4. C-s <!— Enter C-a M-z > C-d C-n C-k
5. C-s <!- Enter C-b C-b C-b M-z u > C-s <! Enter C-a C-k

Ex 1.3
1. emacs SP exer3.html Enter
2. M-% Assignment SP 1 Enter Assignment SP 37 Enter y y n
3. M-% UTF-8 Enter US-ASCII Enter y
4. M-< C-s </o Enter C-p C-e C-o
5. C-x s y C-x C-c diff SP -u SP exer1.html SP exer3.html SP >exer3.diff

Ex 1.4
1. cat exer2.html exer2.diff >exer4.html
2. emacs exer4.html
3. M-> C-p C-p C-SP C-n M-w M-g g 352 Enter C-n C-n C-y
4. M-> C-r <!--- Enter C-SP C-f C-f C-f C-f C-f C-f C-f M-w M-g g 337 Enter C-n C-n C-e C-b C-b C-b C-y M-> C-r <!— Y Enter C-SP C-n C-n C-e M-w M-g g 300 Enter C-n C-n C-n C-y C-s <!—- D Enter C-SP C-e M-w M-g g 90 Enter C-n C-n C-n C-y C-s <!— d Enter C-SP C-n M-w M-g g 15 Enter C-n C-n C-n C-y
5. C-s --- C-SP M-> M-w C-w
6. C-x u
7. C-r --- UP C-r --- <!-- M-> -->
8. M-% <ol> Enter <Ol> Enter y y y y y y y (found 7 instances of <ol>)
9. diff -u exer1.html exer4.html >exer4.diff

Ex 1.5
1. M-x make-directory Enter junk Enter
2. C-x C-f junk/hello.c Enter
3. M-x compile Enter hello.c Enter
4. (Executed program in command line as per instructions)
5. Contents of the *compilation* buffer in exit mode:
   -*- mode: compilation; default-directory: "~/junk/" -*-
   Compilation started at Fri Jan 13 15:50:35

   make -k hello -o hello-out
   make: `hello' is up to date.

   Compilation finished at Fri Jan 13 15:50:35

Ex 1.6
1. C-x b *scratch* Enter
2. (random) C-j
3. (setq x (random)) C-j (setq y (random)) C-j
4. (* x y) C-j (the answer was mathematically incorrect on first attempt)
5. M-: (* x y) (the answer is same as the one before, however, there are additional values in parentheses)
6. the numbers are not completely random since they are based on an initial seed. if emacs  is restarted and (random) is called again, the number generated is always the same.
7. I executed the process about 10-15 times and barely got 1 accurate answer. Hence, I infer that the probability is very close to 0.
